
check_horizontal:

value_1 = 1
value_2 = 1
done = 0
player1_connect = 0

while done = 0

    gosub check_horiz_right
    gosub check_horiz_2_trap
    gosub horiz_move_left
    gosub set_horiz_back

endwhile

return



check_horiz_right:

    if my_grid(value_1,value_2) = 1

          inc value_2
          inc player1_connect
        
    endif

return


set_horiz_back:


     if player1_connect >= 4 then gosub win
     
     if my_grid(value_1,value_2) <> 1 and player1_connect < 7
       inc value_2
       
       if player1_connect >= player1_connect_max 
            
           rem store variables to block max connect
         if best_stop = 0 and player1_connect = player1_connect_max or player1_connect > player1_connect_max 
         gosub check_allow_4_horizontal_player1
           if counter >= 4
            
              if my_grid(value_1,value_2-player1_connect-2) = 0
                  
                   my_stop(0).x = value_2-player1_connect-2
                   my_stop(0).y = value_1
                   my_stop(0).occupied = 0
                   player1_connect_max = player1_connect
                   stop_type = "horizontal"
                   if player1_connect_max = 3 then stop_type = "connect_3"
                   direction = "horizontal"
                 
                   if my_grid(my_stop(0).y+1,my_stop(0).x) <> 0 then best_stop = 1
                 
                   if  my_grid(value_1,value_2-1) <> 0
                      my_stop(1).occupied = 1
                   endif  
            
              endif
          

              if  my_grid(value_1,value_2-1) = 0
                 
                   my_stop(1).x = value_2-1
                   my_stop(1).y = value_1
                   my_stop(1).occupied = 0
                   player1_connect_max = player1_connect
                   stop_type = "horizontal"
                   if player1_connect_max = 3 then stop_type = "connect_3"
                   direction = "horizontal"
                  
                   if my_grid(my_stop(1).y+1,my_stop(1).x) <> 0 then best_stop = 1
                  
                   if my_grid(value_1,value_2-player1_connect-2) <> 0
                      my_stop(0).occupied = 1
                   endif
            
              endif 
            endif
          endif   
          
       endif
        player1_connect = 0
    endif
    
    


return



horiz_move_left:

rem end of board

    if my_grid(value_1,value_2) = -1
        if player1_connect >= 4 then gosub win
        if player1_connect >= player1_connect_max 
           rem store variables to block max connect
         if best_stop = 0 and player1_connect = player1_connect_max or player1_connect > player1_connect_max 
           gosub check_allow_4_horizontal_player1
            if counter >= 4
             
             if player1_connect_max = 3 then stop_type = "connect_3"
             
             if my_grid(value_1,value_2-player1_connect-1) = 0
                  
                  my_stop(0).occupied = 0
                  my_stop(0).y = value_1
                  my_stop(0).x = value_2-player1_connect-1
                  player1_connect_max = player1_connect
                  
                  stop_type = "horizontal"
                  direction = "horizontal"
                  if my_grid(my_stop(0).y+1,my_stop(0).x) <> 0 then best_stop = 1
            
                  if  my_grid(value_1,value_2-1) <> 0
                     my_stop(1).occupied = 1
                 endif 
            
             endif
           
          endif   
         endif  
       endif
        player1_connect = 0
        inc value_1
        value_2 = 1
        if value_1 = 7
           done = 1
        endif 
    endif

return





check_allow_4_horizontal_player1:

       counter = 0
   
       if my_grid(value_1,value_2) = 0 then inc counter
       
       do 
         if value_2 > 7 then exit
         if my_grid(value_1,value_2+1) = 2 or my_grid(value_1,value_2+1) = -1 then exit
         inc counter
         if value_2 > 6 then exit
         if my_grid(value_1,value_2+2) = 2 or my_grid(value_1,value_2+2) = -1 then exit
         inc counter
         if value_2 > 5 then exit
         if my_grid(value_1,value_2+3) = 2 or my_grid(value_1,value_2+3) = -1 then exit
         inc counter
         exit
       loop
       do
         if value_2 < 1 then exit
         if my_grid(value_1,value_2-1) = 2 or my_grid(value_1,value_2-2) = -1 then exit
         inc counter
         if my_grid(value_1,value_2-2) = 2 or my_grid(value_1,value_2-2) = -1 then exit
         inc counter
         if value_2 < 2 then exit
         if my_grid(value_1,value_2-3) = 2 or my_grid(value_1,value_2-3) = -1 then exit
         inc counter
         if value_2 < 3 then exit
         if my_grid(value_1,value_2-4) = 2 or my_grid(value_1,value_2-4) = -1 then exit
         inc counter
         exit 
       loop
      
return














check_horiz_2_trap:

if player1_connect_max = 2 
    
   do 
  
   if my_stop(0).x < 4     
     if my_grid(my_stop(0).y,my_stop(0).x+3) = 0 
        if my_stop(0).x < 5
           if my_grid(my_stop(0).y,my_stop(0).x+4) = 1 and my_grid(my_stop(0).y+1,my_stop(0).x+4) <> 0 then stop_type = "two_trap_right_stop" : best_stop = 1
        endif
     endif
   endif
  
  if my_grid(my_stop(0).y,my_stop(0).x) = 0
     if my_grid(my_stop(0).y,my_stop(0).x-1) = 1 and  my_grid(my_stop(0).y+1,my_stop(0).x-1) <> 0 then stop_type = "two_trap_left_stop" : best_stop = 1 
  endif     
       
       
   if my_grid(my_stop(1).y,my_stop(1).x) = 0 
       if my_grid(my_stop(1).y,my_stop(1).x+1) = 1 and my_grid(my_stop(1).y+1,my_stop(1).x+1) <> 0 then stop_type = "two_trap_right_stop" : best_stop = 1 
   endif
  
  if my_grid(my_stop(1).y,7) = 1
     if my_grid(my_stop(1).y,5) = 0 
       if my_grid(my_stop(1).y,4) = 2 and my_grid(my_stop(1).y+1,4) = 2 then stop_type = "two_trap_left_stop" : best_stop = 1
     endif
  endif
  
  if my_stop(1).x-3 < 3 then exit
     if my_grid(my_stop(1).y,my_stop(1).x-3) = 0 
       if my_grid(my_stop(1).y,my_stop(1).x-4) = 1 and my_grid(my_stop(1).y+1,my_stop(1).x-4) then stop_type = "two_trap_left_stop" : best_stop = 1
     endif
  
  exit
  loop 
endif
return




check_horizontal_max:

if direction = "horizontal"
         counter = 0
       do 
         if my_grid(my_stop(0).y,my_stop(0).x) = 2 or my_grid(my_stop(0).y,my_stop(0).x) = -1 then exit
         inc counter
         if my_stop(0).x < 1 then exit
         if my_grid(my_stop(0).y,my_stop(0).x-1) = 2 or my_grid(my_stop(0).y,my_stop(0).x-1) = -1 then exit
         inc counter
         if my_stop(0).x < 1 then exit
         if my_grid(my_stop(0).y,my_stop(0).x-2) = 2 or my_grid(my_stop(0).y,my_stop(0).x-2) = -1 then exit
         inc counter
         if my_stop(0).x < 2 then exit
         if my_grid(my_stop(0).y,my_stop(0).x-3) = 2 or my_grid(my_stop(0).y,my_stop(0).x-3) = -1 then exit
         inc counter
         exit
       loop
       do
         if my_stop(0).x > 7 then exit
         if my_grid(my_stop(0).y,my_stop(0).x+1) = 2 or my_grid(my_stop(0).y,my_stop(0).x+1) = -1 then exit
         inc counter
         if my_stop(0).x > 6 then exit
         if my_grid(my_stop(0).y,my_stop(0).x+2) = 2 or my_grid(my_stop(0).y,my_stop(0).x+2) = -1 then exit
         inc counter
         if my_stop(0).x > 5 then exit
         if my_grid(my_stop(0).y,my_stop(0).x+3) = 2 or my_grid(my_stop(0).y,my_stop(0).x+3) = -1 then exit
         inc counter
         exit 
       loop
       
       if counter < 4 
          counter = 0
          do 
            if my_grid(my_stop(1).y,my_stop(1).x) = 2 or my_grid(my_stop(1).y,my_stop(1).x) = -1 then exit
            inc counter
            if my_stop(1).x < 1 then exit
            if my_grid(my_stop(1).y,my_stop(1).x-1) = 2 or my_grid(my_stop(1).y,my_stop(1).x-1) = -1 then exit
            inc counter
            if my_stop(1).x < 1 then exit
            if my_grid(my_stop(1).y,my_stop(1).x-2) = 2 or my_grid(my_stop(1).y,my_stop(1).x-2) = -1 then exit
            inc counter
            if my_stop(1).x < 2 then exit
            if my_grid(my_stop(1).y,my_stop(1).x-3) = 2 or my_grid(my_stop(1).y,my_stop(1).x-3) = -1 then exit
            inc counter
            exit
          loop
          do
            if my_stop(1).x > 7 then exit
            if my_grid(my_stop(1).y,my_stop(1).x+1) = 2 or my_grid(my_stop(1).y,my_stop(1).x+1) = -1 then exit
            inc counter
            if my_stop(1).x > 6 then exit
            if my_grid(my_stop(1).y,my_stop(1).x+2) = 2 or my_grid(my_stop(1).y,my_stop(1).x+2) = -1 then exit
            inc counter
            if my_stop(1).x > 5 then exit
            if my_grid(my_stop(1).y,my_stop(1).x+3) = 2 or my_grid(my_stop(1).y,my_stop(1).x+3) = -1 then exit
            inc counter
          exit 
       loop
       
       
       endif       
       
       
       if counter < 4  
          player1_connect_max = 0
          best_stop = 0
       endif
       
endif
return















check_horizontal_2:

value_1 = 1
value_2 = 1
done = 0
player2_connect = 0

while done = 0

    gosub check_horiz_right_2
    gosub horiz_move_left_2
    gosub set_horiz_back_2
    
endwhile


return



check_horiz_right_2:

    if my_grid(value_1,value_2) = 2

          inc value_2
          inc player2_connect
        
    endif

return


set_horiz_back_2:


 if player2_connect >= 4 then gamestate = "initialize" : done = 1
     
     if my_grid(value_1,value_2) <> 2 and player2_connect < 7
         
        rem inc value_2    
   
       if player2_connect >= 4 then gosub win
       if player2_connect > player2_connect_max
          
           rem store variables to block max connect
           gosub check_allow_4_horizontal
           if counter >= 4
             if my_grid(value_1,value_2-player2_connect-1) = 0
                my_go(0).x = value_2-player2_connect-1
                my_go(0).y = value_1
                my_go(0).occupied = 0
                player2_connect_max = player2_connect
                go_type = "horizontal"
                direction2 = "horizontal"
                if  my_grid(value_1,value_2) <> 0
                  my_go(1).occupied = 1
                endif  
            
              endif


              if  my_grid(value_1,value_2) = 0
                my_go(1).x = value_2
                my_go(1).y = value_1
                my_go(1).occupied = 0
                player2_connect_max = player2_connect
                go_type = "horizontal"
                direction2 = "horizontal"
                if my_grid(value_1,value_2-player2_connect-1) <> 0
                  my_go(0).occupied = 1
                endif
            
              endif
         endif 
           
          
      endif
        player2_connect = 0
        inc value_2
        endif
    


return



horiz_move_left_2:

rem end of board

    if my_grid(value_1,value_2) = -1
        
        if player2_connect >= 4 then gosub win
        if player2_connect > player2_connect_max
            
            gosub check_allow_4_horizontal
            if counter >= 4
               rem store variables to block max connect
               go_type = "horizontal"
               if my_grid(value_1,value_2-player2_connect-1) = 0

                 my_go(0).x = value_2-player2_connect-1
                 my_go(0).y = value_1
                 my_go(0).occupied = 0
                 player2_connect_max = player2_connect
                 direction2 = "horizontal"
                 if  my_grid(value_1,value_2-1) <> 0
                   my_go(1).occupied = 1
                 endif 
            
               endif
         
      
          endif
          
        endif
        
        player2_connect = 0
       inc value_1
       value_2 = 1
       if value_1 = 7
          done = 1
       endif 
    endif
 

return








check_player2_horizontal_max:

if direction2 = "horizontal"
         counter = 0
       do 
         if my_grid(my_go(0).y,my_go(0).x) = 1 or my_grid(my_go(0).y,my_go(0).x) = -1 then exit
         inc counter
         if my_go(0).x < 1 then exit
         if my_grid(my_go(0).y,my_go(0).x-1) = 1 or my_grid(my_go(0).y,my_go(0).x-1) = -1 then exit
         inc counter
         if my_go(0).x < 1 then exit
         if my_grid(my_go(0).y,my_go(0).x-2) = 1 or my_grid(my_go(0).y,my_go(0).x-2) = -1 then exit
         inc counter
         if my_go(0).x < 2 then exit
         if my_grid(my_go(0).y,my_go(0).x-3) = 1 or my_grid(my_go(0).y,my_go(0).x-3) = -1 then exit
         inc counter
         exit
       loop
       do
         if my_go(0).x > 7 then exit
         if my_grid(my_go(0).y,my_go(0).x+1) = 1 or my_grid(my_go(0).y,my_go(0).x+1) = -1 then exit
         inc counter
         if my_go(0).x > 6 then exit
         if my_grid(my_go(0).y,my_go(0).x+2) = 1 or my_grid(my_go(0).y,my_go(0).x+2) = -1 then exit
         inc counter
         if my_go(0).x > 5 then exit
         if my_grid(my_go(0).y,my_go(0).x+3) = 1 or my_grid(my_go(0).y,my_go(0).x+3) = -1 then exit
         inc counter
         exit 
       loop
       
       if counter < 4 
          counter = 0
          do 
            if my_grid(my_go(1).y,my_go(1).x) = 1 or my_grid(my_go(1).y,my_go(1).x) = -1 then exit
            inc counter
            if my_go(1).x < 1 then exit
            if my_grid(my_go(1).y,my_go(1).x-1) = 1 or my_grid(my_go(1).y,my_go(1).x-1) = -1 then exit
            inc counter
            if my_go(1).x < 1 then exit
            if my_grid(my_go(1).y,my_go(1).x-2) = 1 or my_grid(my_go(1).y,my_go(1).x-2) = -1 then exit
            inc counter
            if my_go(1).x < 2 then exit
            if my_grid(my_go(1).y,my_go(1).x-3) = 1 or my_grid(my_go(1).y,my_go(1).x-3) = -1 then exit
            inc counter
            exit
          loop
          do
            if my_go(1).x > 7 then exit
            if my_grid(my_go(1).y,my_go(1).x+1) = 1 or my_grid(my_go(1).y,my_go(1).x+1) = -1 then exit
            inc counter
            if my_go(1).x > 6 then exit
            if my_grid(my_go(1).y,my_go(1).x+2) = 1 or my_grid(my_go(1).y,my_go(1).x+2) = -1 then exit
            inc counter
            if my_go(1).x > 5 then exit
            if my_grid(my_go(1).y,my_go(1).x+3) = 1 or my_grid(my_go(1).y,my_go(1).x+3) = -1 then exit
            inc counter
          exit 
       loop
       
       
       endif       
       
       
       if counter < 4  
          player2_connect_max = 0
       endif
       
       if counter >= 4 then mycheck$ = ""

endif
return



check_allow_4_horizontal:

       counter = 0
   
       if my_grid(value_1,value_2) = 0 then inc counter
       
       do 
         if value_2 > 7 then exit
         if my_grid(value_1,value_2+1) = 1 or my_grid(value_1,value_2+1) = -1 then exit
         inc counter
         if value_2 > 6 then exit
         if my_grid(value_1,value_2+2) = 1 or my_grid(value_1,value_2+2) = -1 then exit
         inc counter
         if value_2 > 5 then exit
         if my_grid(value_1,value_2+3) = 1 or my_grid(value_1,value_2+3) = -1 then exit
         inc counter
         exit
       loop
       do
         if value_2 < 1 then exit
         if my_grid(value_1,value_2-1) = 1 or my_grid(value_1,value_2-2) = -1 then exit
         inc counter
         if my_grid(value_1,value_2-2) = 1 or my_grid(value_1,value_2-2) = -1 then exit
         inc counter
         if value_2 < 2 then exit
         if my_grid(value_1,value_2-3) = 1 or my_grid(value_1,value_2-3) = -1 then exit
         inc counter
         if value_2 < 3 then exit
         if my_grid(value_1,value_2-4) = 1 or my_grid(value_1,value_2-4) = -1 then exit
         inc counter
         exit 
       loop
      

return





check_horiz_2_trap_2:


if player2_connect_max = 2 
    
   do 
   
   if my_go(0).x > 5 then exit     
   if my_grid(my_go(0).y,my_go(0).x+3) = 0 
       if my_grid(my_go(0).y,my_go(0).x+4) = 2 then go_type = "two_trap_right" 
   endif
  
  if my_grid(my_go(0).y,my_go(0).x) = 0
     if my_grid(my_go(0).y,my_go(0).x-1) = 2 then go_type = "two_trap_left" 
  endif     
       
       
   if my_grid(my_go(1).y,my_go(1).x) = 0 
       if my_grid(my_go(1).y,my_go(1).x+1) = 2 then go_type = "two_trap_right" 
   endif
  
  if my_grid(my_go(1).y,7) = 2
     if my_grid(my_go(1).y,5) = 0 
       if my_grid(my_go(1).y,4) = 2 then go_type = "two_trap_left" 
     endif
  endif
  
  if my_go(1).x-3 < 3 then exit
     if my_grid(my_go(1).y,my_go(1).x-3) = 0 
       if my_grid(my_go(1).y,my_go(1).x-4) = 2 then go_type = "two_trap_left" 
     endif
  
  exit
  loop 

endif


    
return